# Python + Lab base
FROM quay.io/jupyter/minimal-notebook:python-3.11

USER root

# Generic system libraries
RUN apt-get update && apt-get install -y \
    build-essential \
    pkg-config

# Ensure modules init script is sourced when shell starts
#SHELL ["/bin/bash", "-c"]
#RUN echo "source /etc/profile.d/modules.sh" >> /etc/bash.bashrc

RUN conda update -n base -c defaults conda && \
    conda config --add channels defaults

RUN conda install -n base -c conda-forge -y \
    numpy pandas xarray matplotlib \
    netCDF4 gdal proj geos cartopy libgdal-hdf5 \
    mpi4py nodejs jupyter jupyterlab openjdk cdsapi zope.interface \
    r-devtools r-drc r-codetools r-recommended r-remotes \
    r-tidyterra r-sf r-fs r-sass r-stringi r-stringr r-tidyr \
    r-reshape2 r-recipes r-units r-s2 r-bslib r-caret r-rmarkdown \
    r-Ecume r-sass r-bslib r-cachem r-httpuv r-htmlwidgets \
    r-shiny r-dygraphs \
    r-doParallel r-geosphere r-wesanderson \
    r-deSolve r-shiny r-shinycssloaders \
    r-HDInterval r-IDPmisc r-truncnorm r-httr \
    r-mathjaxr r-readr \
    r-igraph r-pracma

RUN bash <<'EOF'
  set -euo pipefail

  # Activate conda
  source /opt/conda/etc/profile.d/conda.sh
  conda activate base

  # Install IRkernel inside conda R
  R -e "install.packages('IRkernel', repos='https://cran.rstudio.com')"

  # Register the kernel with Jupyter
  R -e "IRkernel::installspec(user = FALSE, prefix='/opt/conda')"

  # Install problematic packages
  R -e 'install.packages(c("TDLM"), repos="https://cran.rstudio.com", dependencies=FALSE, upgrade = "never")'
  R -e 'install.packages(c("devtools", "remotes", "data.table", "htmltools", "foreach", "ggplot2", "PBSddesolve"), repos="https://cran.rstudio.com", dependencies=FALSE, upgrade = "never")'
  R -e 'install.packages(c("sf", "SimInf"), repos="https://cran.rstudio.com", configure.args="--host=host", dependencies=FALSE, upgrade = "never")'
  R -e 'install.packages(c("coda"), repos="https://cran.rstudio.com", dependencies=FALSE, upgrade = "never")'
  R -e 'install.packages(c("nimble"), repos="https://cran.rstudio.com", dependencies=FALSE, upgrade = "never")'
EOF

# For bayesTPC
# RUN git clone https://github.com/johnwilliamsmithjr/bayesTPC.git /tmp/bayesTPC
# For dynamAedes
# RUN git clone --branch development https://github.com/mattmar/dynamAedes.git /tmp/dynamAedes
# For arbocartoR
# RUN git clone https://gitlab.cirad.fr/astre/arbocartoR.git /tmp/arbocartoR
# Instead, copy from the local repository
COPY ./src/ /tmp/
RUN bash <<'EOF'
  set -euo pipefail

  # Activate conda
  source /opt/conda/etc/profile.d/conda.sh
  conda activate base

  # For arbocartoR
  R -e "remotes::install_local('/tmp/arbocartoR', dependencies=FALSE, upgrade = 'never')"
  # For dynamAedes
  R -e "devtools::install_local('/tmp/dynamAedes', dependencies=FALSE, upgrade = 'never')"
  # For bayesTPC
  R -e "devtools::install_local('/tmp/bayesTPC', dependencies=FALSE, upgrade = 'never')"
EOF

# For R-torch
# ENV TORCH_DIR="/srv/torch"
# RUN mkdir -p "$TORCH_DIR" \
#     chmod 777 "$TORCH_DIR"
# RUN bash <<'EOF'
#   set -euo pipefail
# 
#   # Activate conda
#   source /opt/conda/etc/profile.d/conda.sh
#   conda activate base
# 
#   # For R-torch
#   R -e "install.packages('torch', lib='/opt/conda/lib/R/library', repos = 'https://cloud.r-project.org')"
#   R -e "library(torch); torch::install_torch(from_source = TRUE)"
# EOF

# Population + PopJSON
RUN apt-get install -y \
    libgsl-dev
RUN curl -L -o "/tmp/install.population.sh" "https://raw.githubusercontent.com/kerguler/PopJSON/main/install.population.sh" && \
    chmod +x /tmp/install.population.sh && \
    /tmp/install.population.sh --verbose --keep-tests -d /tmp/population
#RUN echo "module load population/${SPOP_VERSION}" >> /etc/bash.bashrc

# Clean up
RUN rm -rf /var/lib/apt/lists/*

# Copy the tutorials to the image
COPY tutorials/ /srv/tutorials/
COPY init_tutorials.sh /usr/local/bin/init_tutorials.sh
RUN chmod +x /usr/local/bin/init_tutorials.sh

# Tutorial preparation routine
ENTRYPOINT ["tini", "-g", "--", "init_tutorials.sh"]
CMD ["jupyterhub-singleuser"]

# Keep CMD/entrypoint from base image (starts single-user server for JupyterHub)
