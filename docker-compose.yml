services:
  tutorials-base:
    build:
      context: .
      dockerfile: Dockerfile.base
    image: vector-modelling-tutorial-base:latest
    profiles: ["build"]

  tutorials-singleuser:
    build:
      context: .
      dockerfile: Dockerfile.singleuser
    image: vector-modelling-tutorial-user:latest
    profiles: ["build"]

  tutorials-jupyterhub:
    build:
      context: .
      dockerfile: Dockerfile.hub
    image: vector-modelling-tutorial-hub:latest
    restart: unless-stopped
    expose:
      - "8000"
    volumes:
      - tutorials-hub-data:/srv/jupyterhub
      - tutorials-user-data:/srv/jupyter
      - ./jupyterhub_config.py:/srv/jupyterhub/jupyterhub_config.py:ro
      - /var/run/docker.sock:/var/run/docker.sock
      # .env is invisible to jupyterhub_config.py Without this
      - ./.env:/srv/jupyterhub/.env:ro
    # environment:
      # Used by your Hub config
      # - COMPOSE_PROJECT_NAME=tutorials-jhub
      # - HUB_CONNECT_URL=http://tutorials-jupyterhub:8000
      # Provide this via .env or your shell before `docker compose up`
      # - IDLE_CULLER_TOKEN=${IDLE_CULLER_TOKEN:?set this in .env}
    networks: [tutorials-jhub]

  tutorials-nginx:
    image: nginx:alpine
    restart: unless-stopped
    depends_on:
      - tutorials-jupyterhub
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certs:/etc/letsencrypt:ro    # place your LE certs here
    networks: [tutorials-jhub]

networks:
  tutorials-jhub: {}

volumes:
  tutorials-hub-data:
  tutorials-user-data: